/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
 
TreeNode* solve(vector<int> &pre, vector<int> &in,int sp,int ep,int si,int ei)
{
    if(si>ei || sp>ep) return nullptr;
    
    TreeNode* root = new TreeNode(pre[sp]);
    
    int ind = si;
    int i=sp;
    
    while(in[ind]!=pre[sp])
    ind++,i++;
    
    root->left = solve(pre,in,sp+1,i,si,ind-1);
    root->right = solve(pre,in,i+1,ep,ind+1,ei);
    
    return root;
    
}
 
TreeNode* Solution::buildTree(vector<int> &pre, vector<int> &in) {
    
    return solve(pre,in,0,pre.size()-1,0,in.size()-1);
}