/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */

TreeNode* solve(vector<int>& A,int l,int r)
{
    if(l>r)
    return nullptr;
    
    int mx = INT_MIN;
    int ind;
    
    for(int i=l;i<=r;i++)
    {
        if(mx < A[i])
        {
            mx = A[i];
            ind = i;
        }
    }
    
    
    TreeNode* root = new TreeNode(mx);
    root->left = solve(A,l,ind-1);
    root->right = solve(A,ind+1,r);
    
    return root;
    
}
 

TreeNode* Solution::buildTree(vector<int> &A) {
    return solve(A,0,A.size()-1);
}
