/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */

TreeNode* solve(vector<int> &in, vector<int> &post,int si,int ei,int sp,int ep)
{
    if(si>ei || sp>ep) return nullptr;

    TreeNode* root=  new TreeNode(post[ep]);
    
    int ind = si;
    int i=sp;
    
    while(in[ind]!=post[ep])
    ind++,i++;
    
    root->left = solve(in,post,si,ind-1,sp,i-1);
    root->right = solve(in,post,ind+1,ei,i,ep-1);
    
    return root;
}
 
 
TreeNode* Solution::buildTree(vector<int> &in, vector<int> &post) {
    
    return solve(in,post,0,in.size()-1,0,post.size()-1);
}
