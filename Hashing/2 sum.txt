vector<int> Solution::twoSum(const vector<int> &A, int B) {
    
    unordered_map<int,vector<int>> mp;
    
    for(int i=0;i<A.size();i++)
    {
        mp[A[i]].push_back(i);
    }
    
    int l=INT_MAX,r=INT_MAX;
    
    for(int i=0;i<A.size();i++)
    {
        int key = B - A[i];
        
        if(mp.find(key)!=mp.end())
        {
            int ind=-1;
            
            for(int j : mp[key])
            {
                if(i!=j)
                {
                    ind = j;
                    break;
                }
            }
            
            if(ind!=-1)
            {
                if(r > max(i+1,ind+1))
                {
                    r = max(i+1,ind+1);
                    l = min(i+1,ind+1);
                }
                
                else if(r==max(i+1,ind+1) && l > min(i+1,ind+1))
                {
                    l = min(i+1,ind+1);
                }
                
                
            }
    
        }
        
    }
    if(l==INT_MAX)
    return {};
    
    return {l,r};
    
}
