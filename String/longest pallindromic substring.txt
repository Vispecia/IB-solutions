string Solution::longestPalindrome(string s) {
    
     string ans="";
        int best=0;
        for(int mid=0;mid<s.size();mid++)
        {
            for(int i=0;mid-i>=0 && mid+i<s.size();i++)
            {
                if(s[mid-i]!=s[mid+i])
                    break;
                int len = 2*i+1;
                if(best < len)
                {
                    ans = s.substr(mid-i,len);
                    best = len;
                }
            }
        }
        for(int mid=0;mid<s.size();mid++)
        {
            for(int i=1;mid-i+1>=0 && mid+i<s.size();i++)
            {
                if(s[mid-i+1]!=s[mid+i])
                    break;
                int len = 2*i;
                if(best < len)
                {
                    ans = s.substr(mid-i+1,len);
                    best = len;
                }
            }
        }
        
        
        
       return ans; 
}
