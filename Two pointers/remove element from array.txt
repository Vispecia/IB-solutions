int Solution::removeElement(vector<int> &A, int B) {
    
    // sort(A.begin(),A.end());
    
    // int d = lower_bound(A.begin(),A.end(),B)-A.begin();
    // int u = upper_bound(A.begin(),A.end(),B)-A.begin();
   
    // int i=d;
    
    // while(i<A.size() && A[i]==B)
    // {
    //     i++;
    // }
    
    // if(i<A.size())
    // {
    //     for(int j=i;j<A.size();j++)
    //     A[d++]=A[j];
        
    //     A.resize(d);
    // }
    
    
    // int n=A.size();
    // int i=0;
    // while(i<n)
    // {
    //     if(A[i]==B)
    //     {
    //         int j=i;
    //         int s=j+1;
    //         while(A[j]==B && j<n)
    //         j++;
            
    //         if(j==n)
    //         {
    //             i=j;
    //             continue;
    //         }
            
    //         swap(A[i],A[j]);
    //         if(j-i>1)
    //         i=s;
    //         else
    //         i=j;
    //     }
    //     else
    //     i++;
    // }
    
    // i=n-1;
    // while(i>=0 && A[i]==B)
    // {
    //     A.pop_back();
    //     i--;
    // }
    // return A.size();
    
    
    int i=0;
    int n=A.size();
    while(i<n)
    {
        if(A[i]==B)
        {
            break;
        }
        i++;
    }
    
    if(i==n)
    return n;
    
    int j=i+1;
    
    while(j<n)
    {
        if(A[j]!=B)
        {
            A[i]=A[j];
            i++;
        }
        j++;
    }
    
    
    while(i<n)
    {
        A.pop_back();
        i++;
    }

    
    return A.size();
   
}
