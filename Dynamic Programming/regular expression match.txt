/*
int Solution::isMatch(const string A, const string B) {
    int n=A.size(),m=B.size();
    vector<vector<int>> dp(n+1,vector<int>(m+1,0));
    
    dp[0][0]=1;
    
    for(int i=1;i<=m;i++)
    if(B[i-1]=='*')
    dp[0][i] = dp[0][i-1];
    
    
    for(int i=1;i<=n;i++)
    {
        for(int j=1;j<=m;j++)
        {
            if(A[i-1]==B[j-1] || B[j-1]=='?')
            dp[i][j] = dp[i-1][j-1];
            
            else if(B[j-1]=='*')
            dp[i][j] = max(dp[i][j-1],dp[i-1][j]);
        }
    }
    return dp[n][m];
}
*/

int Solution::isMatch(const string s, const string p) {
     int pat = p.size();
    int str = s.size();
    
    int i = 0, j = 0;
    int iIndex = -1, jIndex = -1;
    
    while(i < str){
        if(s[i] == p[j] || (j < pat && p[j] == '?')){
            i++;
            j++;
        }
        else if(p[j] == '*' && j < pat){
            jIndex = j;
            iIndex = i;
            j++;
        }
        else if(jIndex != -1){
            j = jIndex + 1;
            i = iIndex + 1;
            iIndex++;
        }
        else{
            return 0;
        }
        
    }
    
    while(j < pat && p[j] == '*'){
        j++;
    }
    
    if(j == pat){
        return 1;
    }
    
    return 0;
}


