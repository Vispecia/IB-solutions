vector<vector<int>> dp;

bool solve(string A,int i, string B,int j, string C,int k)
{
    if(i==A.size())
    {
        return B.substr(j,B.size()).compare(C.substr(k,C.size()))==0;
    }
    if(j==B.size())
    {
        return A.substr(i,A.size()).compare(C.substr(k,C.size()))==0;
    }
    
    if(dp[i][j]!=-1)
    return dp[i][j]==1;
    
    
    bool ans=false;
    
    if(A[i]==C[k] && solve(A,i+1,B,j,C,k+1) || B[j]==C[k] && solve(A,i,B,j+1,C,k+1))
    ans=true;
    
    return dp[i][j]=ans;
    
}

int Solution::isInterleave(string A, string B, string C) {
    dp.clear();
    dp.resize(A.size(),vector<int>(B.size(),-1));
    return solve(A,0,B,0,C,0);
    
}
