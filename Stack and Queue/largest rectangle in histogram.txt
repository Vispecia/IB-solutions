int Solution::largestRectangleArea(vector<int> &A) {
    
    
    vector<int> left(A.size()),right(A.size());
    stack<int> s;
    
    for(int i=0;i<A.size();i++)
    {
        if(s.size()==0)
        {
            left[i]= -1;
        }
        else if(s.size() && A[s.top()]<A[i])
        {
            left[i]=s.top();
        }
        else if(s.size() && A[s.top()]>=A[i])
        {
            while(s.size() && A[s.top()]>=A[i])
            s.pop();
            
            if(s.size()==0)
            left[i]=-1;
            
            else
            left[i]=s.top();
        }
        s.push(i);
    }
    
    while(s.size())
    s.pop();
    
    for(int i=A.size()-1;i>=0;i--)
    {
        if(s.size()==0)
        right[i] = A.size();
        
        else if(s.size() && s.top()!=A.size() && A[s.top()]<A[i])
        right[i] = s.top();
        
        else if(s.size() && s.top()==A.size())
        {
            s.pop();
            while(s.size() && A[s.top()]>=A[i])
            s.pop();
            
            if(s.size()==0)
            right[i]=A.size();
            
            else
            right[i]=s.top();
            
        }
        
        else if(s.size() && s.top()!=A.size() && A[s.top()]>=A[i])
        {
            while(s.size() && A[s.top()]>=A[i])
            s.pop();
            
            if(s.size()==0)
            right[i]=A.size();
            
            else
            right[i]=s.top();
        }
        s.push(i);
    }
    
    
    int ans=0;
    
    for(int i=0;i<A.size();i++)
    {
        ans = max(ans,A[i]*(right[i]-left[i]-1));
    }
    
    
    
    return ans;
    
}
