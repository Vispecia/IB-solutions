/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
 
 ListNode* reverse(ListNode* root)
 {
     ListNode* prev=NULL;
     ListNode* cur = root;
     
     while(cur)
     {
         ListNode* temp =cur->next;
         cur->next = prev;
         prev = cur;
         cur = temp;
     }
     return prev;
 }
 
 
int Solution::lPalin(ListNode* head) {
    
    if(!head)
    return 0;
    
    ListNode* slow = head;
    ListNode* fast = head;
    
    while(fast && fast->next)
    {
        slow=slow->next;
        fast = fast->next->next;
    }
    
    slow = reverse(slow);
    fast=head;
    
    
    //cout<<slow->val<<" "<<fast->val<<" ";
    
    while(slow)
    {
        if(slow->val!=fast->val)
        return 0;
        
        slow=slow->next;
        fast=fast->next;
    }
    return 1;
}
