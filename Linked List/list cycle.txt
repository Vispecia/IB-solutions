/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
ListNode* Solution::detectCycle(ListNode* head) {
    
    
    ListNode* slow=head;
    ListNode* fast=head;
    
    while(slow && fast)
    {
        slow=slow->next;
        
        if(!fast || !fast->next || !fast->next->next)
        {
            return NULL;
        }
        fast=fast->next->next;
        
        if(slow==fast)
        break;
    }


    if(slow==NULL || fast==NULL)
    return NULL;

    ListNode* cur = head;
    while(slow!=cur)
    {
        slow=slow->next;
        cur=cur->next;
    }
    
    
    return cur;
    
    
    
}
